{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\facts-project\\\\FactsApp\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createFact, updateFact } from '../../actions/facts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const fact = useSelector(state => currentId ? state.facts.find(f => f._id === currentId) : null);\n  const styleclass = useStyles();\n  const [factData, setFactData] = useState({\n    creator: '',\n    title: '',\n    category: '',\n    message: '',\n    tags: ''\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (fact) setFactData(fact);\n  }, [fact]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updateFact(currentId, factData));\n    } else {\n      dispatch(createFact(factData));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setFactData({\n      creator: '',\n      title: '',\n      category: '',\n      message: '',\n      tags: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: styleclass.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${styleclass.root} ${styleclass.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Fact \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: factData.creator,\n        onChange: e => setFactData({ ...factData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: factData.title,\n        onChange: e => setFactData({ ...factData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"category\",\n        variant: \"outlined\",\n        label: \"Category\",\n        fullWidth: true,\n        value: factData.category,\n        onChange: e => setFactData({ ...factData,\n          category: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Fact\",\n        fullWidth: true,\n        value: factData.message,\n        onChange: e => setFactData({ ...factData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: factData.tags,\n        onChange: e => setFactData({ ...factData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: styleclass.buttonSubmit,\n        variant: \"contained\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        style: {\n          backgroundColor: '#990000',\n          color: '#FFFFFF'\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          backgroundColor: '#FFFFFF',\n          color: '#FFFFFF'\n        },\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"ma+engqBOsP4R9OjwtoZkRehk7g=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Projects/facts-project/FactsApp/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","useStyles","TextField","Button","Typography","Paper","useDispatch","useSelector","createFact","updateFact","Form","currentId","setCurrentId","fact","state","facts","find","f","_id","styleclass","factData","setFactData","creator","title","category","message","tags","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","buttonSubmit","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport useStyles from './styles';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createFact, updateFact } from '../../actions/facts';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const fact = useSelector((state) => currentId ? state.facts.find((f) => f._id === currentId) : null);\r\n    const styleclass = useStyles();\r\n    const [factData, setFactData] = useState({\r\n        creator: '',\r\n        title: '',\r\n        category: '',\r\n        message: '',\r\n        tags: '',\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        if (fact) setFactData(fact);\r\n    }, [fact]);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (currentId) {\r\n            dispatch(updateFact(currentId, factData))\r\n        } else {\r\n            dispatch(createFact(factData))\r\n        }\r\n        clear();\r\n    }\r\n\r\n\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setFactData({ creator: '', title: '', category: '', message: '', tags: '' })\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper className={styleclass.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${styleclass.root} ${styleclass.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\">{currentId ? 'Editing' : 'Creating'} a Fact </Typography>\r\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth={true} value={factData.creator} onChange={(e) => setFactData({ ...factData, creator: e.target.value })} />\r\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth={true} value={factData.title} onChange={(e) => setFactData({ ...factData, title: e.target.value })} />\r\n                <TextField name=\"category\" variant=\"outlined\" label=\"Category\" fullWidth={true} value={factData.category} onChange={(e) => setFactData({ ...factData, category: e.target.value })} />\r\n                <TextField name=\"message\" variant=\"outlined\" label=\"Fact\" fullWidth={true} value={factData.message} onChange={(e) => setFactData({ ...factData, message: e.target.value })} />\r\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth={true} value={factData.tags} onChange={(e) => setFactData({ ...factData, tags: e.target.value.split(',') })} />\r\n\r\n                <Button className={styleclass.buttonSubmit} variant=\"contained\" size=\"large\" type=\"submit\" fullWidth={true}\r\n                    style={{ backgroundColor: '#990000', color: '#FFFFFF' }}\r\n                >Submit</Button>\r\n                <Button variant=\"contained\" style={{ backgroundColor: '#FFFFFF', color: '#FFFFFF' }} size=\"small\" onClick={clear} fullWidth={true}>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}